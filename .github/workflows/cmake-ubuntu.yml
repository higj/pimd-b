name: Compile on Ubuntu & Test

on:
  push:
    branches: [ "master", "removingSimRefsTest" ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '**/README.md'

env:
  OPENMPI_VER: 5.0.3
  BUILD_TYPE: Release
  NDIM: 3

jobs:
  initialize:
    runs-on: ubuntu-24.04

    steps:
    - name: Restore cached dependencies
      id: cache-dependencies-restore
      uses: actions/cache/restore@v4
      with:
        path: /home/runner/.openmpi
        key: ${{runner.os}}-openmpi-${{env.OPENMPI_VER}}
  
    - name: Install dependencies
      if: steps.cache-dependencies-restore.outputs.cache-hit != 'true'
      run: |
        wget https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-${{env.OPENMPI_VER}}.tar.gz
        gunzip -c openmpi-${{env.OPENMPI_VER}}.tar.gz | tar xf -
        cd openmpi-${{env.OPENMPI_VER}}
        ./configure --prefix="/home/${USER}/.openmpi"
        sudo make all install

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache/save@v4
      if: steps.cache-dependencies-restore.outputs.cache-hit != 'true'
      with:
        path: /home/runner/.openmpi
        key: ${{runner.os}}-openmpi-${{env.OPENMPI_VER}}

    - name: Configure OpenMPI 
      # Set environment variables related to OpenMPI
      run: |
        export PATH=${PATH}:/home/${USER}/.openmpi/bin/
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/${USER}/.openmpi/lib/
        export OPAL_PREFIX=/home/${USER}/.openmpi

  build:
    needs: initialize
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - alg_type_name: naive-bosonic
            alg_type_val: 1
          - alg_type_name: new-bosonic
            alg_type_val: 0

    env:
      build_folder_name: build-${{matrix.alg_type_name}}

    steps:
      - uses: actions/checkout@v4
  
      - name: Restore cached dependencies
        id: cache-dependencies-restore
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/.openmpi
          key: ${{runner.os}}-openmpi-${{env.OPENMPI_VER}}

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/${{env.build_folder_name}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DNDIM=${{env.NDIM}} -DFACTORIAL_BOSONIC_ALGORITHM=${{matrix.alg_type_val}} -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_C_COMPILER=gcc-13 -DMPI_HOME=/home/${USER}/.openmpi

      - name: Build
        run: cmake --build ${{github.workspace}}/${{env.build_folder_name}} --config ${{env.BUILD_TYPE}}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install -r ${{github.workspace}}/tests/requirements.txt

      - name: Run regression tests
        run: |
          export OPENMPI_BIN=/home/${USER}/.openmpi/bin/
          if [ "${{ matrix.alg_type_val }}" = "1" ]; then
              python ${{github.workspace}}/tests/main.py ${{github.workspace}}/${{env.build_folder_name}} ${{github.workspace}}/tests/cases --factorial
          else
              python ${{github.workspace}}/tests/main.py ${{github.workspace}}/${{env.build_folder_name}} ${{github.workspace}}/tests/cases
          fi
